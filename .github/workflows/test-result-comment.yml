
name: Test Summary PR comment

on:
  workflow_run:
    # do NOT use quotes: https://stackoverflow.com/a/72551795/17876693
    workflows: [ROOT CI TEST]
    types:
      - completed
permissions: {}

jobs:
  comment-test-results:
    name: Publish Test Results

    # if: github.event.workflow_run.event == 'pull_request'
    if: github.event.workflow_run.event == 'push'

    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write
      actions: read

    steps:
      # - name: Download and Extract Artifacts
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #      mkdir -p artifacts && cd artifacts

      #      artifacts_url=${{ github.event.workflow_run.artifacts_url }}

      #      gh api --paginate "$artifacts_url" -q '.artifacts[] | [.name, .archive_download_url] | @tsv' | while read artifact
      #      do
      #        IFS=$'\t' read name url <<< "$artifact"
      #        gh api $url > "$name.zip"
      #        unzip -d "$name" "$name.zip"
      #      done

      - name: Download and Extract Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p artifacts && cd artifacts

          artifacts_url=${{ github.event.workflow_run.artifacts_url }}

          artifact_names=$(gh api --paginate "$artifacts_url" -q '.artifacts[] | select(.name | startswith("Test Coverage") or startswith("Test Results")) | .name')

          for name in $artifact_names; do
            gh api --paginate "$artifacts_url" -q ".artifacts[] | select(.name == \"$name\") | [.archive_download_url]" | xargs -I {} gh api {} > "$name.zip"
            unzip -d "$name" "$name.zip"
          done

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          event_file: artifacts/Event File/event.json
          event_name: ${{ github.event.workflow_run.event }}
          files: "artifacts/**/*.xml"

      - name: View Contents of CoverageXML.xml
        run: cat artifacts/'Test Coverage fedora38-cov Debug'/CoverageXML.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: artifacts/*/CoverageXML.xml
          flags: unittests
          name: codecov-umbrella
          verbose: true   